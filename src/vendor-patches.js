// Ultra Vendor Patches - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç AsyncMode –æ—à–∏–±–æ–∫
// –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –ø–∞—Ç—á–∏–Ω–æ–≤–∞–Ω–∏–µ –Ω–∞ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω—è—Ö

console.log('üîß –ù–∞—á–∏–Ω–∞–µ–º –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –ø–∞—Ç—á–∏–Ω–æ–≤–∞–Ω–∏–µ vendor –º–æ–¥—É–ª–µ–π...');

// 1. –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ —á–µ—Ä–µ–∑ Error –ø–µ—Ä–µ—Ö–≤–∞—Ç
const originalError = window.Error;
window.Error = function (message) {
  if (message && typeof message === 'string' && message.includes('AsyncMode')) {
    console.log('üõ°Ô∏è –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞ AsyncMode –æ—à–∏–±–∫–∞:', message);
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –æ—à–∏–±–∫—É
    return new originalError('React compatibility layer: AsyncMode –ø–∞—Ç—á –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
  }
  return new originalError(message);
};

// 2. –ü–µ—Ä–µ—Ö–≤–∞—Ç –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫ –¥–æ—Å—Ç—É–ø–∞ –∫ undefined —Å–≤–æ–π—Å—Ç–≤–∞–º
const originalDescriptor = Object.getOwnPropertyDescriptor;
Object.getOwnPropertyDescriptor = function (obj, prop) {
  const desc = originalDescriptor.call(this, obj, prop);
  if (prop === 'AsyncMode' && (!desc || desc.value === undefined)) {
    console.log('üîß –ü–∞—Ç—á–∏–º getOwnPropertyDescriptor –¥–ª—è AsyncMode');
    return {
      value: function AsyncModeStub(props) { return props?.children || null; },
      writable: true,
      enumerable: false,
      configurable: true
    };
  }
  return desc;
};

// 3. –ü–∞—Ç—á–∏–º React —á–µ—Ä–µ–∑ Proxy —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∑–∞—â–∏—Ç–æ–π
if (typeof window !== 'undefined') {
  const createAsyncModeStub = () => {
    const stub = function AsyncMode(props) {
      return props?.children || null;
    };
    stub.$$typeof = Symbol.for('react.async_mode');
    stub.displayName = 'AsyncMode (Polyfill)';
    return stub;
  };

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π React
  const originalReact = window.React;
  
  // –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä-–∑–∞—â–∏—â–µ–Ω–Ω—ã–π –ø—Ä–æ–∫—Å–∏
  window.React = new Proxy(originalReact || {}, {
    get(target, prop) {
      if (prop === 'AsyncMode') {
        console.log('üîß Vendor –ø–∞—Ç—á: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º AsyncMode stub');
        return createAsyncModeStub();
      }
      return target[prop];
    },
    
    set(target, prop, value) {
      if (prop === 'AsyncMode') {
        console.log('üõ°Ô∏è Vendor –ø–∞—Ç—á: –±–ª–æ–∫–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É AsyncMode =', value);
        return true; // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
      }
      target[prop] = value;
      return true;
    },
    
    has(target, prop) {
      if (prop === 'AsyncMode') {
        return true; // –í—Å–µ–≥–¥–∞ –≥–æ–≤–æ—Ä–∏–º, —á—Ç–æ AsyncMode —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      }
      return prop in target;
    },
    
    defineProperty(target, prop, descriptor) {
      if (prop === 'AsyncMode') {
        console.log('üõ°Ô∏è Vendor –ø–∞—Ç—á: –±–ª–æ–∫–∏—Ä—É–µ–º defineProperty AsyncMode');
        return true;
      }
      return Object.defineProperty(target, prop, descriptor);
    }
  });
  
  // 4. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º AsyncMode –≤–æ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–µ—Å—Ç–∞
  try {
    window.React.AsyncMode = createAsyncModeStub();
  } catch (error) {
    console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å AsyncMode –≤ window.React:', error.message);
  }
}

// –ü–∞—Ç—á–∏–º –º–æ–¥—É–ª–∏ —á–µ—Ä–µ–∑ require/import –∏–Ω—Ç–µ—Ä—Å–µ–ø—Ü–∏—é
const originalRequire = typeof require !== 'undefined' ? require : null;
if (originalRequire) {
  const Module = originalRequire('module');
  const originalLoad = Module._load;
  
  Module._load = function (request, parent) {
    const result = originalLoad.apply(this, arguments);
    
    // –ü–∞—Ç—á–∏–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–æ–¥—É–ª–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    if (request.includes('hoist-non-react-statics') || 
        request.includes('react-transition-group') ||
        request.includes('@emotion/react')) {
      
      console.log(`üîß –ü–∞—Ç—á–∏–Ω–≥ –º–æ–¥—É–ª—è: ${request}`);
      
      // –ï—Å–ª–∏ –º–æ–¥—É–ª—å –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å AsyncMode –∏–∑ React
      if (result && typeof result === 'object') {
        return new Proxy(result, {
          get(target, prop) {
            const value = target[prop];
            if (typeof value === 'function') {
              return function (...args) {
                try {
                  return value.apply(this, args);
                } catch (error) {
                  if (error.message && error.message.includes('AsyncMode')) {
                    console.log('üõ°Ô∏è –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞ –æ—à–∏–±–∫–∞ AsyncMode –≤', request);
                    return null;
                  }
                  throw error;
                }
              };
            }
            return value;
          }
        });
      }
    }
    
    return result;
  };
}

console.log('üîß Vendor –ø–∞—Ç—á–∏–Ω–≥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');