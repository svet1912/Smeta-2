#!/usr/bin/env node
// HTTP —Ç–µ—Å—Ç –¥–ª—è Database Monitoring Dashboard

const BASE_URL = 'http://localhost:3002';

async function testDatabaseMonitoring() {
  console.log('üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Database Monitoring Dashboard...\n');

  try {
    // 1. –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ database pool
    console.log('üìä 1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /api/admin/database/stats');
    
    const statsResponse = await fetch(`${BASE_URL}/api/admin/database/stats`, {
      headers: {
        Authorization: 'Bearer test-token'
      }
    });
    
    if (statsResponse.ok) {
      const stats = await statsResponse.json();
      console.log('  ‚úÖ Database —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞');
      console.log(`  üìä Pool connections: ${stats.data?.pool?.totalCount || 0}`);
      console.log(`  üìà Queries executed: ${stats.data?.pool?.queriesExecuted || 0}`);
      console.log(`  ‚ö° Average query time: ${Math.round(stats.data?.pool?.averageQueryTime || 0)}ms`);
    } else {
      console.log('  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', statsResponse.status, statsResponse.statusText);
    }

    // 2. –¢–µ—Å—Ç health check
    console.log('\nüè• 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /api/admin/database/health');
    
    const healthResponse = await fetch(`${BASE_URL}/api/admin/database/health`, {
      headers: {
        Authorization: 'Bearer test-token'
      }
    });
    
    if (healthResponse.ok) {
      const health = await healthResponse.json();
      console.log('  ‚úÖ Health check –ø–æ–ª—É—á–µ–Ω');
      console.log(`  üíö Status: ${health.data?.status || 'unknown'}`);
      console.log(`  ‚è±Ô∏è Connection time: ${health.data?.connectionTime || 0}ms`);
    } else {
      console.log('  ‚ùå –û—à–∏–±–∫–∞ health check:', healthResponse.status);
    }

    // 3. –¢–µ—Å—Ç –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    console.log('\nüêå 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /api/admin/database/slow-queries');
    
    const slowQueriesResponse = await fetch(`${BASE_URL}/api/admin/database/slow-queries?minDuration=100`, {
      headers: {
        Authorization: 'Bearer test-token'
      }
    });
    
    if (slowQueriesResponse.ok) {
      const slowQueries = await slowQueriesResponse.json();
      console.log('  ‚úÖ –ú–µ–¥–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –ø–æ–ª—É—á–µ–Ω—ã');
      console.log(`  üìä –ù–∞–π–¥–µ–Ω–æ –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: ${slowQueries.data?.count || 0}`);
    } else {
      console.log('  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:', slowQueriesResponse.status);
    }

    // 4. –¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–ø—Ä–æ—Å–∞
    console.log('\nüîç 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /api/admin/database/analyze-query');
    
    const analyzeResponse = await fetch(`${BASE_URL}/api/admin/database/analyze-query`, {
      method: 'POST',
      headers: {
        Authorization: 'Bearer test-token',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        query: 'SELECT NOW() as current_time',
        params: []
      })
    });
    
    if (analyzeResponse.ok) {
      const analysis = await analyzeResponse.json();
      console.log('  ‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—É—á–µ–Ω');
      console.log(`  üí∞ Total cost: ${analysis.data?.totalCost || 'N/A'}`);
      console.log(`  ‚è±Ô∏è Actual time: ${analysis.data?.actualTime || 'N/A'}ms`);
    } else {
      console.log('  ‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–ø—Ä–æ—Å–∞:', analyzeResponse.status);
    }

    // 5. –¢–µ—Å—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
    console.log('\nüîß 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /api/admin/database/optimize-query');
    
    const optimizeResponse = await fetch(`${BASE_URL}/api/admin/database/optimize-query`, {
      method: 'POST',
      headers: {
        Authorization: 'Bearer test-token',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        query: 'SELECT * FROM auth_users WHERE email = $1',
        params: ['test@example.com'],
        context: { tenantId: 'test-tenant-123' }
      })
    });
    
    if (optimizeResponse.ok) {
      const optimization = await optimizeResponse.json();
      console.log('  ‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—É—á–µ–Ω–∞');
      console.log('  üìù –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π:', optimization.data?.original?.query?.substring(0, 50) + '...');
      console.log('  üîß –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π:', optimization.data?.optimized?.query?.substring(0, 50) + '...');
    } else {
      console.log('  ‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:', optimizeResponse.status);
    }

    // 6. –¢–µ—Å—Ç Database Dashboard HTML
    console.log('\nüñ•Ô∏è 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /api/admin/database/dashboard');
    
    const dashboardResponse = await fetch(`${BASE_URL}/api/admin/database/dashboard`, {
      headers: {
        Authorization: 'Bearer test-token'
      }
    });
    
    if (dashboardResponse.ok) {
      const dashboardHtml = await dashboardResponse.text();
      console.log('  ‚úÖ Database Dashboard HTML –ø–æ–ª—É—á–µ–Ω');
      console.log(`  üìè –†–∞–∑–º–µ—Ä: ${dashboardHtml.length} —Å–∏–º–≤–æ–ª–æ–≤`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      const hasTitle = dashboardHtml.includes('Database Performance Dashboard');
      const hasMetrics = dashboardHtml.includes('metric-card');
      const hasConnections = dashboardHtml.includes('–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');
      const hasQueries = dashboardHtml.includes('–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤');
      
      console.log(`  üè∑Ô∏è Title: ${hasTitle ? '‚úÖ' : '‚ùå'}`);
      console.log(`  üìä Metrics: ${hasMetrics ? '‚úÖ' : '‚ùå'}`);
      console.log(`  üîó Connections info: ${hasConnections ? '‚úÖ' : '‚ùå'}`);
      console.log(`  üìà Queries info: ${hasQueries ? '‚úÖ' : '‚ùå'}`);
    } else {
      console.log('  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è dashboard:', dashboardResponse.status);
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Database Monitoring –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
    console.log('\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ Database Monitoring endpoints:');
    console.log('  ‚Ä¢ /api/admin/database/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ pool');
    console.log('  ‚Ä¢ /api/admin/database/health - health check');
    console.log('  ‚Ä¢ /api/admin/database/slow-queries - –º–µ–¥–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã');
    console.log('  ‚Ä¢ /api/admin/database/analyze-query - –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏');
    console.log('  ‚Ä¢ /api/admin/database/optimize-query - –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤');
    console.log('  ‚Ä¢ /api/admin/database/dashboard - HTML dashboard');

  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ HTTP —Ç–µ—Å—Ç–æ–≤:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3002');
      console.log('   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run dev:server');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testDatabaseMonitoring();

export { testDatabaseMonitoring };