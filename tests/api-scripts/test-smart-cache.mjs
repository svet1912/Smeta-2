#!/usr/bin/env node
// Test Smart Cache —Å–∏—Å—Ç–µ–º–∞ - Phase 2 Step 6

import { fileURLToPath } from 'url';
const __filename = fileURLToPath(import.meta.url);

async function testSmartCache() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Smart Cache System Phase 2 Step 6...\n');

  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
    const { smartCacheGetOrSet, smartCacheInvalidate, getSmartCacheAnalytics, cleanupSmartCache } = await import('../../server/cache/smartCache.js');
    const { initCacheWarming } = await import('../../server/cache/cacheWarming.js');

    console.log('‚úÖ –ú–æ–¥—É–ª–∏ Smart Cache –∑–∞–≥—Ä—É–∂–µ–Ω—ã');

    // 1. –¢–µ—Å—Ç –±–∞–∑–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∫—ç—à–∞
    console.log('\nüìù 1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π...');
    
    // –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
    const testData = await smartCacheGetOrSet(
      'test:simple',
      300,
      async () => {
        console.log('  üìä –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...');
        return { message: 'Hello Smart Cache!', timestamp: new Date().toISOString() };
      }
    );
    console.log('  ‚úÖ –ü—Ä–æ—Å—Ç–æ–π –∫—ç—à —Ä–∞–±–æ—Ç–∞–µ—Ç:', testData.message);

    // –¢–µ—Å—Ç —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
    const dependentData = await smartCacheGetOrSet(
      'test:with-dependencies',
      300,
      async () => {
        console.log('  üìä –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏...');
        return { data: 'cached with dependencies', id: Math.random() };
      },
      {
        dependencies: ['test-dependency', 'another-dependency'],
        metadata: { testType: 'dependency-test' }
      }
    );
    console.log('  ‚úÖ –ö—ç—à —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç:', dependentData.data);

    // 2. –¢–µ—Å—Ç –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º
    console.log('\nüóëÔ∏è 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ smart invalidation...');
    
    // –°–æ–∑–¥–∞–µ–º –µ—â–µ –æ–¥–∏–Ω –∫–ª—é—á —Å —Ç–æ–π –∂–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å—é
    await smartCacheGetOrSet(
      'test:another-dependent',
      300,
      async () => ({ value: 'another dependent value' }),
      { dependencies: ['test-dependency'] }
    );

    // –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –ø–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    await smartCacheInvalidate('test-dependency');
    console.log('  ‚úÖ –ò–Ω–≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–∏–ª–∏—Å—å
    const shouldBeNull = await smartCacheGetOrSet(
      'test:with-dependencies',
      300,
      async () => {
        console.log('  üìä –î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –∫—ç—à–µ, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–∞–Ω–æ–≤–æ...');
        return { data: 'regenerated after invalidation', id: Math.random() };
      },
      { dependencies: ['test-dependency'] }
    );
    console.log('  ‚úÖ –ü–æ—Å–ª–µ –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –∑–∞–Ω–æ–≤–æ');

    // 3. –¢–µ—Å—Ç Cache Warming
    console.log('\nüî• 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Cache Warming...');
    
    const warmingService = initCacheWarming();
    console.log('  ‚úÖ Cache Warming –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è—Ö
    const strategiesInfo = warmingService.getStrategiesInfo();
    console.log('  üìã –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ warming:');
    console.log(`    ‚Ä¢ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ: ${strategiesInfo.critical.count} —à—Ç.`);
    console.log(`    ‚Ä¢ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ: ${strategiesInfo.popular.count} —à—Ç.`);
    console.log(`    ‚Ä¢ –ü–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é: ${strategiesInfo.onDemand.count} —à—Ç.`);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ warming
    await warmingService.warmCriticalData();
    console.log('  ‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω—ã');

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
    warmingService.addCustomStrategy({
      key: 'test:custom-strategy',
      ttl: 180,
      dependencies: ['custom-test'],
      producer: async () => ({
        customData: 'This is custom warming strategy',
        generated: new Date().toISOString()
      })
    });

    // –ó–∞–ø—É—Å–∫–∞–µ–º on-demand warming
    await warmingService.warmOnDemand('custom');
    console.log('  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è warming –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');

    // 4. –¢–µ—Å—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    console.log('\nüìä 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∫—ç—à–∞...');
    
    const analytics = await getSmartCacheAnalytics();
    console.log('  üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞:');
    console.log(`    ‚Ä¢ Hit Rate: ${analytics.hitRate}%`);
    console.log(`    ‚Ä¢ Hits: ${analytics.hits}`);
    console.log(`    ‚Ä¢ Misses: ${analytics.misses}`);
    console.log(`    ‚Ä¢ Sets: ${analytics.sets}`);
    console.log(`    ‚Ä¢ Errors: ${analytics.errors}`);
    console.log(`    ‚Ä¢ Average Latency: ${Math.round(analytics.averageLatency * 100) / 100}ms`);
    console.log(`    ‚Ä¢ Total Keys: ${analytics.totalKeys}`);

    if (analytics.redis) {
      console.log('  üî¥ Redis –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:');
      console.log(`    ‚Ä¢ Used Memory: ${analytics.redis.usedMemory}`);
      console.log(`    ‚Ä¢ Actual Keys: ${analytics.actualKeys || 'calculating...'}`);
    }

    // 5. –¢–µ—Å—Ç –æ—á–∏—Å—Ç–∫–∏
    console.log('\nüßπ 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏...');
    
    await cleanupSmartCache();
    console.log('  ‚úÖ –û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');

    // 6. –§–∏–Ω–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
    console.log('\nüìä 6. –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞...');
    
    const finalAnalytics = await getSmartCacheAnalytics();
    console.log(`  üìà –§–∏–Ω–∞–ª—å–Ω—ã–π Hit Rate: ${finalAnalytics.hitRate}%`);
    console.log(`  üî¢ –û–±—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: ${finalAnalytics.hits + finalAnalytics.misses + finalAnalytics.sets}`);
    
    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã Smart Cache –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìã Smart Cache Phase 2 Step 6 –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:');
    console.log('  ‚úÖ Dependency tracking –∏ smart invalidation');
    console.log('  ‚úÖ Cache warming —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º–∏');
    console.log('  ‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥');
    console.log('  ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö');
    console.log('  ‚úÖ –ì–∏–±–∫–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è');
    console.log('  ‚úÖ –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º');

  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Smart Cache:', error.message);
    console.error('Stack trace:', error.stack);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
if (import.meta.url === `file://${process.argv[1]}`) {
  testSmartCache().then(() => {
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    process.exit(0);
  }).catch((error) => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });
}

export { testSmartCache };