// –ó–∞–¥–∞—á–∏ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –¥–ª—è enhanced authentication
import { cleanupExpiredTokens } from './authService.js';

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –æ—á–∏—Å—Ç–∫—É –∏—Å—Ç–µ–∫—à–∏—Ö —Ç–æ–∫–µ–Ω–æ–≤
 */
function startTokenCleanupScheduler() {
  // –û—á–∏—Å—Ç–∫–∞ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
  const CLEANUP_INTERVAL = 6 * 60 * 60 * 1000; // 6 —á–∞—Å–æ–≤ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

  console.log('üïí –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤ (–∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤)');

  // –ü–µ—Ä–≤–∞—è –æ—á–∏—Å—Ç–∫–∞ —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞
  setTimeout(async () => {
    try {
      await cleanupExpiredTokens();
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–≤–æ–π –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    }
  }, 60 * 1000);

  // –†–µ–≥—É–ª—è—Ä–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
  setInterval(async () => {
    try {
      console.log('üßπ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–æ–≤–æ–≥–æ –∫—É–∂–∞–Ω–∂–∞ –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤...');
      await cleanupExpiredTokens();
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–æ–≤–æ–π –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    }
  }, CLEANUP_INTERVAL);
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç–æ–∫–µ–Ω–∞–º (–¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞)
 */
async function getTokenStats() {
  const { query } = await import('../database.js');
  
  try {
    const result = await query('SELECT * FROM get_refresh_token_stats()');
    return result.rows[0];
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

/**
 * –í—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–æ–∫–µ–Ω–æ–≤ –≤ –ª–æ–≥–∏
 */
async function logTokenStats() {
  const stats = await getTokenStats();
  
  if (stats) {
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ refresh tokens:', {
      total: stats.total_tokens,
      active: stats.active_tokens,
      expired: stats.expired_tokens,
      revoked: stats.revoked_tokens,
      uniqueUsers: stats.unique_users,
      avgLifetime: stats.avg_token_lifetime
    });
  }
}

export {
  startTokenCleanupScheduler,
  getTokenStats,
  logTokenStats
};