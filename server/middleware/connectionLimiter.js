/**
 * Middleware –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è–º–∏
 */
import { activeConnections as activeConnectionsGauge } from '../metrics.js';

// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
const activeConnections = new Set();
const MAX_CONNECTIONS = 50; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç –¥–ª—è production

/**
 * Middleware –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
 */
export function connectionLimiterMiddleware(req, res, next) {
  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º health checks –∏ metrics
  if (req.path === '/api/health' || req.path === '/api/health/db' || req.path === '/metrics') {
    return next();
  }

  if (activeConnections.size >= MAX_CONNECTIONS) {
    console.log(`‚ö†Ô∏è –û—Ç–∫–ª–æ–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å - –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç (${activeConnections.size}/${MAX_CONNECTIONS})`);
    return res.status(503).json({ 
      error: '–°–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
      code: 'SERVER_OVERLOADED'
    });
  }
  
  const connectionId = Math.random().toString(36).substr(2, 9);
  activeConnections.add(connectionId);
  
  req.connectionId = connectionId;
  console.log(`üì® ${req.method} ${req.path} [${connectionId}] (${activeConnections.size}/${MAX_CONNECTIONS})`);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç—Ä–∏–∫—É –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
  activeConnectionsGauge.set(activeConnections.size);
  
  // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
  const cleanup = () => {
    activeConnections.delete(connectionId);
    activeConnectionsGauge.set(activeConnections.size);
  };
  
  res.on('finish', cleanup);
  res.on('close', cleanup);
  
  next();
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
 */
export function getConnectionStats() {
  return {
    active: activeConnections.size,
    max: MAX_CONNECTIONS,
    utilization: (activeConnections.size / MAX_CONNECTIONS * 100).toFixed(1) + '%'
  };
}

// Named export –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export { connectionLimiterMiddleware as connectionLimiter };

export default {
  connectionLimiterMiddleware,
  getConnectionStats
};
