/**
 * Refactored Server Startup
 * –ó–∞–ø—É—Å–∫ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
 */
import app from './app-refactored.js';
import { config } from './config.js';

const PORT = config.port;

async function startRefactoredServer() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...');

  // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
  app.listen(PORT, '0.0.0.0', () => {
    console.log(`üöÄ –†–µ—Ñ–∞–∫—Ç–æ—Ä–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
    console.log(`üìä API –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}/health`);
    console.log(`üåê –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ –ø–æ—Ä—Ç: ${PORT}`);
    console.log(`üìà –ú–µ—Ç—Ä–∏–∫–∏: http://localhost:${PORT}/metrics`);
  });
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
startRefactoredServer().catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
  process.exit(1);
});

export { startRefactoredServer };
