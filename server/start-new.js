/**
 * –ù–æ–≤—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
 */
import app from './app-new.js';
import { config } from './config.js';
import { query } from './database.js';

const PORT = config.port;

async function startServer() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const result = await query('SELECT NOW() as current_time');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ:', result.rows[0].current_time);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—ã
    if (app.initializeTables) {
      await app.initializeTables();
    }
  } catch (error) {
    console.log('‚ö†Ô∏è  –ë—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ)');
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
  }

  // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
  const server = app.listen(PORT, '0.0.0.0', () => {
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
    console.log(`üìä API –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}/api/test`);
    console.log(`üåê –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ –ø–æ—Ä—Ç: ${PORT}`);
    console.log(`üìà –ú–µ—Ç—Ä–∏–∫–∏: http://localhost:${PORT}/metrics`);
    console.log(`üîß –ö—ç—à —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: http://localhost:${PORT}/api/cache/stats`);
  });

  // Graceful shutdown
  process.on('SIGTERM', () => {
    console.log('üõë –ü–æ–ª—É—á–µ–Ω SIGTERM, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...');
    server.close(() => {
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      process.exit(0);
    });
  });

  process.on('SIGINT', () => {
    console.log('üõë –ü–æ–ª—É—á–µ–Ω SIGINT, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...');
    server.close(() => {
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      process.exit(0);
    });
  });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (import.meta.url === `file://${process.argv[1]}`) {
  startServer().catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    process.exit(1);
  });
}

export { startServer };
