// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –ø–æ—Ç–æ–ª–∫–∞
import { Pool } from 'pg';
import fs from 'fs';
import { config } from './config.js';

const pool = new Pool({
  connectionString: config.databaseUrl,
  ssl: config.databaseUrl.includes('aiven') ? { rejectUnauthorized: false } : false
});

async function runMigration(migrationFile = 'add_ceiling_fields_to_rooms.sql') {
  const client = await pool.connect();
  
  try {
    console.log(`üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é: ${migrationFile}...`);
    
    // –ß–∏—Ç–∞–µ–º SQL –º–∏–≥—Ä–∞—Ü–∏—é
    const migrationSQL = fs.readFileSync(`./migrations/${migrationFile}`, 'utf8');
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
    await client.query(migrationSQL);
    
    console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã
    const indexResult = await client.query(`
      SELECT schemaname, tablename, indexname, indexdef 
      FROM pg_indexes 
      WHERE indexname LIKE 'idx_%'
      AND schemaname = 'public'
      ORDER BY tablename, indexname;
    `);
    
    if (indexResult.rows.length > 0) {
      console.log('üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã:');
      indexResult.rows.forEach((row) => {
        console.log(`  - ${row.indexname} –Ω–∞ ${row.tablename}`);
      });
    } else {
      console.log('ÔøΩ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
    throw error;
  } finally {
    client.release();
    await pool.end();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
const migrationFile = process.argv[2];
runMigration(migrationFile).catch(console.error);