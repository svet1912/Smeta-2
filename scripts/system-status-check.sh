#!/bin/bash

# üöÄ SMETA360-2 System Status Check
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã

echo "üéØ –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –°–ò–°–¢–ï–ú–´ SMETA360-2"
echo "========================================"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP-–æ—Ç–≤–µ—Ç–∞
check_http() {
    local url=$1
    local name=$2
    local response=$(curl -s -o /dev/null -w "%{http_code}" "$url")
    
    if [ "$response" = "200" ]; then
        echo "‚úÖ $name: —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $response)"
        return 0
    else
        echo "‚ùå $name: –ø—Ä–æ–±–ª–µ–º–∞ (HTTP $response)"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
check_process() {
    local process_name=$1
    local description=$2
    
    if pgrep -f "$process_name" > /dev/null; then
        echo "‚úÖ $description: –∑–∞–ø—É—â–µ–Ω"
        return 0
    else
        echo "‚ùå $description: –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
}

echo "üîç –ü–†–û–í–ï–†–ö–ê –ü–†–û–¶–ï–°–°–û–í:"
echo "--------------------"
check_process "node index.js" "Backend Server (Node.js)"
check_process "vite" "Frontend Server (Vite)"
check_process "node start.js" "Additional Server"
echo ""

echo "üåê –ü–†–û–í–ï–†–ö–ê HTTP –°–ï–†–í–ò–°–û–í:"
echo "-------------------------"
check_http "http://localhost:3000" "Frontend (React + Vite)"
check_http "http://localhost:3001/api/health" "Backend API Health"
check_http "http://localhost:3001/api/test" "Backend API Test"
echo ""

echo "üóÑÔ∏è –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•:"
echo "------------------------"
# –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API
db_response=$(curl -s http://localhost:3001/api/test)
if echo "$db_response" | grep -q "database_time"; then
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    db_time=$(echo "$db_response" | grep -o '"database_time":"[^"]*"' | cut -d'"' -f4)
    echo "   üìÖ –í—Ä–µ–º—è –ë–î: $db_time"
else
    echo "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º"
fi
echo ""

echo "üîí –ü–†–û–í–ï–†–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò:"
echo "------------------------"
# –ü—Ä–æ–≤–µ—Ä–∫–∞ security headers
security_headers=$(curl -I -s http://localhost:3000 | grep -E "(X-Content-Type-Options|X-Frame-Options|X-XSS-Protection)")
if [ -n "$security_headers" ]; then
    echo "‚úÖ Security Headers: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    echo "$security_headers" | sed 's/^/   /'
else
    echo "‚ö†Ô∏è  Security Headers: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
fi
echo ""

echo "‚ö° –ü–†–û–í–ï–†–ö–ê –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò:"
echo "-----------------------------"
# –¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ API
start_time=$(date +%s%3N)
curl -s http://localhost:3001/api/health > /dev/null
end_time=$(date +%s%3N)
response_time=$((end_time - start_time))

if [ $response_time -lt 200 ]; then
    echo "‚úÖ API Response Time: ${response_time}ms (–æ—Ç–ª–∏—á–Ω–æ)"
elif [ $response_time -lt 500 ]; then
    echo "‚ö†Ô∏è  API Response Time: ${response_time}ms (–ø—Ä–∏–µ–º–ª–µ–º–æ)"
else
    echo "‚ùå API Response Time: ${response_time}ms (–º–µ–¥–ª–µ–Ω–Ω–æ)"
fi
echo ""

echo "üìä –ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–û–í:"
echo "------------------"
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤
active_ports=$(netstat -tlnp 2>/dev/null | grep -E "(3000|3001|4174|8080)" | grep LISTEN || echo "")
if [ -n "$active_ports" ]; then
    echo "‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ—Ä—Ç—ã:"
    echo "$active_ports" | while read line; do
        port=$(echo "$line" | awk '{print $4}' | cut -d':' -f2)
        echo "   üîå –ü–æ—Ä—Ç $port: –∞–∫—Ç–∏–≤–µ–Ω"
    done
else
    echo "‚ö†Ô∏è  –ü–æ—Ä—Ç—ã: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
fi
echo ""

echo "üß™ –ë–´–°–¢–†–´–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢:"
echo "------------------------------"
# –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
auth_response=$(curl -s -X POST -H "Content-Type: application/json" \
    -d '{"email":"test@example.com","password":"test123"}' \
    http://localhost:3001/api/auth/login 2>/dev/null || echo "error")

if echo "$auth_response" | grep -q "error\|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω\|401"; then
    echo "‚úÖ API Authentication: —ç–Ω–¥–ø–æ–∏–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç (–æ–∂–∏–¥–∞–µ–º—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö)"
else
    echo "‚ö†Ô∏è  API Authentication: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
fi
echo ""

echo "üìà –û–ë–©–ò–ô –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´:"
echo "========================"

# –ü–æ–¥—Å—á–µ—Ç —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
success_count=0
total_checks=6

# Frontend
if check_http "http://localhost:3000" "" >/dev/null 2>&1; then
    ((success_count++))
fi

# Backend API
if check_http "http://localhost:3001/api/health" "" >/dev/null 2>&1; then
    ((success_count++))
fi

# Database
if curl -s http://localhost:3001/api/test | grep -q "database_time"; then
    ((success_count++))
fi

# Processes
if pgrep -f "node index.js" >/dev/null && pgrep -f "vite" >/dev/null; then
    ((success_count++))
fi

# API Response Time
start_time=$(date +%s%3N)
curl -s http://localhost:3001/api/health >/dev/null 2>&1
end_time=$(date +%s%3N)
response_time=$((end_time - start_time))
if [ $response_time -lt 500 ]; then
    ((success_count++))
fi

# Ports
if netstat -tlnp 2>/dev/null | grep -E "(3000|3001)" | grep -q LISTEN; then
    ((success_count++))
fi

percentage=$((success_count * 100 / total_checks))

if [ $percentage -ge 90 ]; then
    echo "üéâ –°–¢–ê–¢–£–°: –û–¢–õ–ò–ß–ù–û ($success_count/$total_checks –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ - ${percentage}%)"
    echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!"
elif [ $percentage -ge 70 ]; then
    echo "‚ö†Ô∏è  –°–¢–ê–¢–£–°: –•–û–†–û–®–û ($success_count/$total_checks –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ - ${percentage}%)"
    echo "üîß –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è"
else
    echo "‚ùå –°–¢–ê–¢–£–°: –¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø ($success_count/$total_checks –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ - ${percentage}%)"
    echo "üö® –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã"
fi

echo ""
echo "üîó –°–°–´–õ–ö–ò –î–õ–Ø –î–û–°–¢–£–ü–ê:"
echo "====================="
echo "üñ•Ô∏è  Frontend: http://localhost:3000"
echo "üîß Backend API: http://localhost:3001"
echo "üìä Health Check: http://localhost:3001/api/health"
echo "üß™ Test Endpoint: http://localhost:3001/api/test"
echo ""
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: /workspaces/Smeta-2/PROJECT_DOCUMENTATION.md"
echo "üéØ –°—Ç–∞—Ç—É—Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: /workspaces/Smeta-2/OPTIMIZATION_COMPLETE.md"
echo ""
echo "üéä SMETA360-2 Enterprise-Grade Construction Estimation System"
echo "   ‚ú® –ü–æ–ª–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"