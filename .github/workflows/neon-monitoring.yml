name: üìä Neon Database Monitoring & Backup

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –±—ç–∫–∞–ø Neon PostgreSQL –¥–ª—è SMETA360-2
# –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 02:00 UTC –∏ –ø—Ä–∏ –ø—É—à–µ –≤ main

on:
  schedule:
    # –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 02:00 UTC (05:00 –ø–æ –ú–æ—Å–∫–≤–µ)
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
    paths:
      - 'server/**'
      - 'src/api/**'
      - '.github/workflows/neon-monitoring.yml'
  workflow_dispatch: # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –≤—Ä—É—á–Ω—É—é

env:
  NODE_VERSION: '18'

jobs:
  neon-monitoring:
    name: üîç Neon Database Monitoring
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üü¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: üêò Install PostgreSQL client
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client-15

    - name: üì¶ Install Vercel CLI
      run: npm install -g vercel@latest

    - name: üîë Setup Vercel authentication
      run: |
        echo "${{ secrets.VERCEL_TOKEN }}" > ~/.vercel-token
        vercel login --token "${{ secrets.VERCEL_TOKEN }}"
        vercel link --project=${{ secrets.VERCEL_PROJECT_ID }} --yes

    - name: üîç Run Neon monitoring
      id: monitoring
      run: |
        chmod +x ./scripts/monitor-neon.sh
        ./scripts/monitor-neon.sh > monitoring-output.txt 2>&1
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        if grep -q "–°–¢–ê–¢–£–°: –í–°–ï –û–¢–õ–ò–ß–ù–û" monitoring-output.txt; then
          echo "status=excellent" >> $GITHUB_OUTPUT
        elif grep -q "–°–¢–ê–¢–£–°: –•–û–†–û–®–û" monitoring-output.txt; then
          echo "status=good" >> $GITHUB_OUTPUT
        else
          echo "status=needs_attention" >> $GITHUB_OUTPUT
        fi
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        CONNECTION_TIME=$(grep -o "—Ä–∞–±–æ—Ç–∞–µ—Ç ([0-9]*ms)" monitoring-output.txt | grep -o "[0-9]*" | head -1)
        SIMPLE_AVG=$(grep -o "SELECT [0-9]*ms" monitoring-output.txt | grep -o "[0-9]*" | head -1)
        COMPLEX_AVG=$(grep -o "JOIN [0-9]*ms" monitoring-output.txt | grep -o "[0-9]*" | head -1)
        
        echo "connection_time=${CONNECTION_TIME:-0}" >> $GITHUB_OUTPUT
        echo "simple_avg=${SIMPLE_AVG:-0}" >> $GITHUB_OUTPUT
        echo "complex_avg=${COMPLEX_AVG:-0}" >> $GITHUB_OUTPUT

    - name: üìä Upload monitoring report
      uses: actions/upload-artifact@v4
      with:
        name: neon-monitoring-report-${{ github.run_number }}
        path: |
          monitoring-output.txt
          neon-monitoring-*.txt
        retention-days: 30

    - name: üö® Alert on performance issues
      if: steps.monitoring.outputs.status == 'needs_attention'
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '‚ö†Ô∏è Neon Database Performance Alert',
            body: `## üö® Database Performance Issue Detected
            
            **Connection Time:** ${{ steps.monitoring.outputs.connection_time }}ms
            **Simple Query Avg:** ${{ steps.monitoring.outputs.simple_avg }}ms
            **Complex Query Avg:** ${{ steps.monitoring.outputs.complex_avg }}ms
            
            **Status:** NEEDS ATTENTION
            
            Please check the monitoring report and consider:
            - Increasing Neon Compute Units
            - Optimizing slow queries
            - Checking connection pooling
            - Reviewing database indexes
            
            **Action Required:** Review Neon console and optimize performance.
            
            **Workflow:** ${{ github.workflow }}
            **Run:** ${{ github.run_id }}`,
            labels: ['bug', 'database', 'performance', 'urgent']
          });

  neon-backup:
    name: üíæ Neon Database Backup
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: neon-monitoring
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üêò Install PostgreSQL client
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client-15

    - name: üì¶ Install Vercel CLI
      run: npm install -g vercel@latest

    - name: üîë Setup Vercel authentication
      run: |
        echo "${{ secrets.VERCEL_TOKEN }}" > ~/.vercel-token
        vercel login --token "${{ secrets.VERCEL_TOKEN }}"
        vercel link --project=${{ secrets.VERCEL_PROJECT_ID }} --yes

    - name: üíæ Create Neon backup
      id: backup
      run: |
        chmod +x ./scripts/backup-neon.sh
        ./scripts/backup-neon.sh > backup-output.txt 2>&1
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –±—ç–∫–∞–ø–∞
        if grep -q "–ë–≠–ö–ê–ü –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û" backup-output.txt; then
          echo "status=success" >> $GITHUB_OUTPUT
        else
          echo "status=failed" >> $GITHUB_OUTPUT
        fi
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –±—ç–∫–∞–ø–æ–≤
        BACKUP_SIZE=$(grep -o "–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –ø–∞–ø–∫–∏: [0-9.]*[KMGT]" backup-output.txt | grep -o "[0-9.]*[KMGT]" | head -1)
        echo "backup_size=${BACKUP_SIZE:-unknown}" >> $GITHUB_OUTPUT

    - name: üì§ Upload backup files
      uses: actions/upload-artifact@v4
      with:
        name: neon-backup-${{ github.run_number }}
        path: |
          backups/neon/
          backup-output.txt
        retention-days: 90

    - name: üö® Alert on backup failure
      if: steps.backup.outputs.status == 'failed'
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '‚ùå Neon Database Backup Failed',
            body: `## üö® Database Backup Failure
            
            **Status:** FAILED
            **Size:** ${{ steps.backup.outputs.backup_size }}
            
            The automated backup of Neon PostgreSQL database has failed.
            
            **Immediate Action Required:**
            1. Check Neon database connectivity
            2. Verify Vercel environment variables
            3. Review backup logs in workflow artifacts
            4. Run manual backup if needed
            
            **Workflow:** ${{ github.workflow }}
            **Run:** ${{ github.run_id }}
            
            This is a critical issue that needs immediate attention.`,
            labels: ['bug', 'database', 'backup', 'critical']
          });

  health-summary:
    name: üìã Health Summary
    runs-on: ubuntu-latest
    needs: [neon-monitoring, neon-backup]
    if: always()
    
    steps:
    - name: üìã Create health summary
      uses: actions/github-script@v7
      with:
        script: |
          const monitoring = '${{ needs.neon-monitoring.result }}';
          const backup = '${{ needs.neon-backup.result }}';
          const monitoringStatus = '${{ needs.neon-monitoring.outputs.status }}';
          
          let summary = '## üè• SMETA360-2 Database Health Summary\n\n';
          
          // Monitoring status
          if (monitoring === 'success') {
            if (monitoringStatus === 'excellent') {
              summary += '‚úÖ **Monitoring**: EXCELLENT performance\n';
            } else if (monitoringStatus === 'good') {
              summary += '‚úÖ **Monitoring**: GOOD performance\n';
            } else {
              summary += '‚ö†Ô∏è **Monitoring**: NEEDS ATTENTION\n';
            }
          } else {
            summary += '‚ùå **Monitoring**: FAILED\n';
          }
          
          // Backup status
          if (backup === 'success') {
            summary += '‚úÖ **Backup**: SUCCESS\n';
          } else if (backup === 'skipped') {
            summary += '‚è≠Ô∏è **Backup**: SKIPPED (scheduled only)\n';
          } else if (backup === 'failure') {
            summary += '‚ùå **Backup**: FAILED\n';
          } else {
            summary += '‚ûñ **Backup**: NOT RUN\n';
          }
          
          // Performance metrics
          summary += '\n### üìä Performance Metrics\n';
          summary += `- **Connection**: ${{ needs.neon-monitoring.outputs.connection_time }}ms\n`;
          summary += `- **Simple Queries**: ${{ needs.neon-monitoring.outputs.simple_avg }}ms\n`;
          summary += `- **Complex Queries**: ${{ needs.neon-monitoring.outputs.complex_avg }}ms\n`;
          
          // Recommendations
          summary += '\n### üí° Recommendations\n';
          if (monitoringStatus === 'needs_attention') {
            summary += '- üîß Optimize database performance\n';
            summary += '- üìà Consider increasing Neon Compute Units\n';
            summary += '- üîç Review slow queries\n';
          } else {
            summary += '- ‚úÖ System operating normally\n';
            summary += '- üìä Continue regular monitoring\n';
          }
          
          summary += `\n**Report Time**: ${new Date().toISOString()}\n`;
          summary += `**Workflow**: ${{ github.workflow }}\n`;
          summary += `**Run**: ${{ github.run_id }}\n`;
          
          console.log(summary);
          
          // –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∫–æ–º–º–∏—Ç—É –µ—Å–ª–∏ —ç—Ç–æ push
          if (context.eventName === 'push') {
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: summary
            });
          }